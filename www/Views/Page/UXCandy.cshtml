@{
  Layout = "~/Views/Shared/_Layout.cshtml";
  ViewBag.Title = "UX Candy";
}
<section>
<section>
  <header class="block-text">
    <h1>UX <b>Candy</b></h1>
  </header>
    
  <article id="theBeginning">
    <article class="block-large">
      <div class="bigText">
        <p>"Wat was ook al weer die ene link?" Of "Hoe heette ook alweer dat ene tooltje?" Hier tref je een overzicht van de links en andere relevante zaken die in de UX Candy presentatie zijn genoemd. Doe er je voordeel mee ;-)</p>
        <a class="visual caption">
          <img src="/Static/Images/Braille_Display.png" />
          <p>Huh? Waisda? Een braillelezer!</p>
        </a>
        <h3>Linkjes</h3>
        <p>Dat willen we allemaal wel. Wij niet minder. Mooi webspul moet óók slim zijn. We streven er altijd naar dat wat we opleveren er niet alleen goed uitziet maar dat het ook nog eens precies doet wat je verwacht en ook nog eens zo makkelijk als mogelijk. Om dat te bereiken moet een engineer over de grenzen van de eigen expertise heen kunnen kijken. Want kunnen programmeren is niet voldoende. Dat brokje code wat je nu net zit te tikken heeft een doel, namelijk iemands leven een beetje aangenamer maken. Dat kan bijvoorbeeld doordat een dagelijkse routine leuker wordt. Of eenvoudiger. Goed voorbeeld hiervan is wat wij mogen doen voor 9292. We proberen het plannen van een reis makkelijker te maken. En als het even kan ook veel leuker. Software engineers die daarover nadenken dat is al een simpel voorbeeld van interaction engineering. Maar er zijn ook specialisten in het grensoverschrijdend denken.</p>
      </div>
      <div class="block-small subcontent">
        <h2>Persoonlijke gegevens</h2>
        <p>Ook handig... <br /><a href="mailto:johan@q42.nl">johan@q42.nl</a><br /><a href="">Twitter</a></p>
      </div>
    </article>
  </article>
</section>
</section>